<Application x:Class="SD.IdentitySystem.Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SD.IdentitySystem.Client"
             xmlns:kino="https://github.com/DinoChan/Kino.Toolkit.Wpf"
             xmlns:converters="clr-namespace:SD.Infrastructure.WPF.Converters;assembly=SD.Infrastructure.WPF"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:extensions="clr-namespace:SD.Infrastructure.WPF.Extensions;assembly=SD.Infrastructure.WPF"
             xmlns:fluentWpf="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <local:Startup x:Key="Startup" />
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/FluentWPF;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Steel.xaml" />
                <ResourceDictionary Source="pack://application:,,,/BusyIndicator;component/Theme/Default.xaml" />
                <ResourceDictionary>
                    <!--值转换器-->
                    <converters:EnumMemberConverter x:Key="EnumMemberConverter" />
                    <converters:TreeListViewIndentConverter x:Key="TreeListViewIndentConverter" />
                    <converters:TreeListViewRowIndexConverter x:Key="TreeListViewRowIndexConverter" />
                    <converters:TreeListViewBackgroundConverter x:Key="TreeListViewBackgroundConverter" />
                    <!--图标-->
                    <DrawingImage x:Key="IconFile">
                        <DrawingImage.Drawing>
                            <GeometryDrawing Brush="#203646" Geometry="M703.952018 0.406439v255.89839h255.87581L703.952018 0.406439z m-63.991533 0H192.132657a127.983065 127.983065 0 0 0-127.960485 127.960485v767.672591a127.983065 127.983065 0 0 0 127.960485 127.960485H831.844763a127.983065 127.983065 0 0 0 127.983065-127.960485V320.273782H639.960485V0.406439z m63.991533 831.664123h-383.858876v-63.968952h383.858876v63.968952z m0-191.906857h-383.858876v-63.968953h383.858876v63.968953z m0-255.920971v63.968953h-383.858876v-63.968953h383.858876z" />
                        </DrawingImage.Drawing>
                    </DrawingImage>
                    <DrawingImage x:Key="IconFolder">
                        <DrawingImage.Drawing>
                            <GeometryDrawing Brush="#203646" Geometry="M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2c-1.5-1.4-3.5-2.2-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32z m-180 0H238c-13 0-24.8 7.9-29.7 20L136 643.2V256h188.5l119.6 114.4H748V444z" />
                        </DrawingImage.Drawing>
                    </DrawingImage>
                    <PathGeometry x:Key="Arrow" Figures="M513.728968 801.548285L13.63942599 301.254151c-18.242732-18.242732-18.106338-47.73799 0.30688701-65.844327a47.226511 47.226511 0 0 1 66.389904 0.272788l433.154061 433.358652L943.643665 235.784908A47.192413 47.192413 0 0 1 1010.033569 235.307528 46.30585 46.30585 0 0 1 1010.545048 301.151856l-496.81608 500.396429z" />
                    <!--功能面板样式-->
                    <Style x:Key="FunctionPanel" TargetType="{x:Type WrapPanel}">
                        <Setter Property="HorizontalAlignment" Value="Right" />
                        <Setter Property="VerticalAlignment" Value="Bottom" />
                        <Setter Property="Margin" Value="0,0,15,15" />
                    </Style>
                    <!--功能面板边框样式-->
                    <Style x:Key="FunctionPanelBorder" TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="#CCCCCC" />
                        <Setter Property="BorderThickness" Value="0,1,0,1" />
                    </Style>
                    <!--TextBlock默认样式-->
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                    <!--TextBlock超链接样式-->
                    <Style x:Key="HyperlinkText" TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="#0094FF" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Background" Value="#0094FF" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!--TextBlock行内文本样式-->
                    <Style x:Key="GridInsideText" TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="10,0,0,0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                    <!--TextBlock时间样式-->
                    <Style x:Key="DateTimeText" TargetType="{x:Type TextBlock}">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                    <!--TextBox默认样式-->
                    <Style BasedOn="{StaticResource MahApps.Styles.TextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Height" Value="30" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                    <!--PasswordBox默认样式-->
                    <Style TargetType="{x:Type PasswordBox}">
                        <Setter Property="Height" Value="30" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                    <!--DatePicker默认样式-->
                    <Style TargetType="{x:Type DatePicker}">
                        <Setter Property="Height" Value="30" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                    <!--CheckBox默认样式-->
                    <Style TargetType="{x:Type CheckBox}">
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                    <!--ComboBox默认样式-->
                    <Style BasedOn="{StaticResource MahApps.Styles.ComboBox.Virtualized}" TargetType="{x:Type ComboBox}">
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                    <!--Button默认样式-->
                    <Style BasedOn="{StaticResource ButtonRevealStyle}" TargetType="{x:Type Button}">
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="Width" Value="85" />
                        <Setter Property="Height" Value="28" />
                        <Setter Property="Margin" Value="10,0,0,0" />
                        <Setter Property="fluentWpf:RevealElement.BorderOpacity" Value="0.4" />
                        <Setter Property="fluentWpf:RevealElement.MouseOverBorderOpacity" Value="1" />
                    </Style>
                    <!--Button表格样式-->
                    <Style BasedOn="{StaticResource ButtonRoundRevealStyle}" x:Key="GridButton" TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="Width" Value="70" />
                        <Setter Property="Height" Value="28" />
                        <Setter Property="Margin" Value="3,0,0,0" />
                        <Setter Property="Padding" Value="4" />
                    </Style>
                    <!--表单元素默认样式-->
                    <Style TargetType="{x:Type kino:FormItem}">
                        <Setter Property="Padding" Value="3" />
                    </Style>
                    <!--TreeListView折叠按钮样式-->
                    <Style x:Key="TreeListViewToggleButton" TargetType="{x:Type ToggleButton}">
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Width" Value="19" />
                        <Setter Property="Height" Value="13" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Width="14" Height="14" Background="Transparent">
                                        <Path x:Name="ExpandPath" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" Data="{StaticResource Arrow}" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="-90"/>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                <Setter.Value>
                                                    <RotateTransform Angle="0"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!--TreeListView表格边框样式-->
                    <Style x:Key="TreeListViewBorder" TargetType="Border">
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="BorderThickness" Value="1,0,0,0" />
                        <Setter Property="Margin" Value="-8,-2,-5,-2" />
                    </Style>
                    <!--TreeListView表格边框结尾样式-->
                    <Style x:Key="TreeListViewBorderEnd" TargetType="Border">
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="BorderThickness" Value="1,0,1,0" />
                        <Setter Property="Margin" Value="-8,-2,-5,-2" />
                    </Style>
                    <!--复选框单元格模板-->
                    <DataTemplate x:Key="CheckBoxCellTemplate">
                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </DataTemplate>
                    <!--复选框单元格头模板-->
                    <DataTemplate x:Key="CheckBoxCellHeaderTemplate">
                        <CheckBox cal:Message.Attach="[Event Checked] = [Action CheckAll()]; [Event Unchecked] = [Action UncheckAll()]" />
                    </DataTemplate>
                    <!--DataGrid默认样式-->
                    <Style x:Key="DataGridDefault" TargetType="{x:Type DataGrid}">
                        <Setter Property="extensions:DataGridExtension.DisplayRowNumber" Value="True" />
                        <Setter Property="AutoGenerateColumns" Value="False" />
                        <Setter Property="IsReadOnly" Value="True" />
                        <Setter Property="CanUserSortColumns" Value="False" />
                        <Setter Property="SelectionUnit" Value="FullRow" />
                        <Setter Property="CanUserAddRows" Value="False" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="GridLinesVisibility" Value="All" />
                        <Setter Property="Background" Value="#F4F4F4" />
                        <Setter Property="AlternatingRowBackground" Value="WhiteSmoke" />
                        <Setter Property="HorizontalGridLinesBrush" Value="LightGray" />
                        <Setter Property="VerticalGridLinesBrush" Value="LightGray" />
                    </Style>
                    <!--DataGrid列头默认样式-->
                    <Style x:Key="DataGridColumnHeaderDefault" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                    <!--DataGrid行默认样式-->
                    <Style x:Key="DataGridRowDefault" TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="#FFE48D" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#EAF2FF" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                    <!--DataGrid单元格默认样式-->
                    <Style x:Key="DataGridCellDefault" TargetType="{x:Type DataGridCell}">
                        <Setter Property="Height" Value="28" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <ContentPresenter VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers >
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!--DataGrid单元格缩进样式-->
                    <Style x:Key="DataGridCellMargin" TargetType="{x:Type DataGridCell}"
                           BasedOn="{StaticResource DataGridCellDefault}" >
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <ContentPresenter Margin="10,0,0,0" VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
