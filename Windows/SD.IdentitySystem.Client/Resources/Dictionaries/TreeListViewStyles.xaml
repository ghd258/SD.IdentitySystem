<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:customControls="clr-namespace:SD.Infrastructure.WPF.CustomControls;assembly=SD.Infrastructure.WPF">

    <!--TreeListView折叠按钮样式-->
    <Style x:Key="TreeListViewToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="19" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="14" Height="14" Background="Transparent">
                        <Path x:Name="ExpandPath" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" Data="{StaticResource Arrow}" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="-90" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TreeListView表格边框样式-->
    <Style x:Key="TreeListViewBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1,0,0,0" />
        <Setter Property="Margin" Value="-8,-2,-5,-2" />
    </Style>
    <!--TreeListView表格边框结尾样式-->
    <Style x:Key="TreeListViewBorderEnd" TargetType="Border">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1,0,1,0" />
        <Setter Property="Margin" Value="-8,-2,-5,-2" />
    </Style>
    <!--TreeListView行号列数据模板-->
    <DataTemplate x:Key="TreeListViewRowNumberCellTemplate">
        <Grid Height="24">
            <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type customControls:TreeListViewItem}}, Converter={StaticResource TreeListViewRowIndexConverter}}" />
        </Grid>
    </DataTemplate>
    <!--TreeListView基准列数据模板-->
    <DataTemplate x:Key="TreeListViewRowCriterionCellTemplate">
        <Border Style="{StaticResource TreeListViewBorder}">
            <WrapPanel VerticalAlignment="Center">
                <ToggleButton x:Name="CriterionExpander" 
                                  Style="{StaticResource TreeListViewToggleButton}" 
                                  Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type customControls:TreeListViewItem}}, Converter={StaticResource TreeListViewIndentConverter}}"
                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type customControls:TreeListViewItem}}}" ClickMode="Press" />
                <Image x:Name="CriterionIcon" Width="14" Height="14" 
                           HorizontalAlignment="Center" VerticalAlignment="Center" 
                           Source="{StaticResource IconFolder}" />
                <CheckBox x:Name="CriterionCbx" Visibility="Collapsed" IsChecked="{Binding IsChecked}" />
                <TextBlock Text="{Binding Name}" Margin="2,0,0,0" />
            </WrapPanel>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type customControls:TreeListViewItem}}}" Value="False">
                <Setter TargetName="CriterionExpander" Property="Visibility" Value="Hidden" />
                <Setter TargetName="CriterionIcon" Property="Source" Value="{StaticResource IconFile}" />
                <Setter TargetName="CriterionCbx" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>